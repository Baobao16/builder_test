# curl -i http://httpbin.org/ipcurl --request POST
#     --url http://10.2.66.75:28545
#     --header 'accept: application/json'
#     --header 'content-type: application/json'
#     --data '
#{
#  "id": 1,
#  "jsonrpc": "2.0",
#  "method": "eth_getTransactionReceipt",
#  "params": [
#    "0x71b79e847e6a01dd43a7fce6bdfcdbd327583b4d6f3819f91c797ddca652ad34"
#  ]
#}
#'
POST http://10.1.8.114:28545
accept: application/json
Content-Type: application/json


{
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_getTransactionReceipt",
  "params": [
    "0x1b079b1ae6d25dcb43810b3d489d8a009e4c98c0f7cb7e193ec65103271f2c37"
  ]
}


###




# "0x2d7b6d" "0x2d7b85"
# func Test_con(t *testing.T) {
# 	defer utils.ResetContract(t, conf.Mylock, conf.Lock_reset, conf.Tx_type)
# 	var txs types.Transactions
# 	t.Log("[Step-2] User 1 bundle [tx1, tx2], tx2 not allowed to revert.\n")
# 	usr1_arg := utils.User_tx(conf.RootPk, conf.Mylock, conf.Mylock_fakelock_1ong_code)
# 	txs_1, revertTxHashes := cases.GenerateBNBTxs(&usr1_arg, usr1_arg.SendAmount, usr1_arg.Data, 1)
# 	bundleArgs1 := utils.AddBundle(txs, txs_1, revertTxHashes)

# 	t.Log("[Step-3] User 2 bundle [tx1, tx3], tx3 not allowed to revert.\n")
# 	usr2_arg := utils.User_tx(conf.RootPk2, conf.Mylock, conf.Mylock_fakelock_11_code)
# 	txs_2, revertTxHashes := cases.GenerateBNBTxs(&usr2_arg, usr2_arg.SendAmount, usr2_arg.Data, 1)
# 	bundleArgs2 := utils.AddBundle(txs, txs_2, revertTxHashes)

# 	args[0] = &usr1_arg
# 	args[1] = &usr2_arg
# 	bundleArgs_lsit[0] = bundleArgs1
# 	bundleArgs_lsit[1] = bundleArgs2

# 	t.Log("[Step-4] User 1 and User 2 send bundles .\n")
# 	cbn := utils.ConcurSendBundles(t, args, bundleArgs_lsit)
# 	println(cbn)
# 	utils.BlockheightIncreased(t)
# }